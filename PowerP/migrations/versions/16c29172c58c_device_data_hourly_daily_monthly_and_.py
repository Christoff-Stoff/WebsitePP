"""Device data, hourly, daily, monthly and yearly table added

Revision ID: 16c29172c58c
Revises: 2a7b268fe5a6
Create Date: 2023-02-15 09:06:58.352222

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '16c29172c58c'
down_revision = '2a7b268fe5a6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily__summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('generated_power_sum', sa.Float(), nullable=True),
    sa.Column('consumed_power_sum', sa.Float(), nullable=True),
    sa.Column('excess_power_sum', sa.Float(), nullable=True),
    sa.Column('savings_sum', sa.Float(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('daily__summary', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_daily__summary_date'), ['date'], unique=False)

    op.create_table('device__data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('generated_power', sa.Float(), nullable=True),
    sa.Column('consumed_power', sa.Float(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('device__data', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_device__data_timestamp'), ['timestamp'], unique=False)

    op.create_table('hourly__summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('generated_power', sa.Float(), nullable=True),
    sa.Column('consumed_power', sa.Float(), nullable=True),
    sa.Column('excess_power', sa.Float(), nullable=True),
    sa.Column('savings', sa.Float(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('hourly__summary', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_hourly__summary_date'), ['date'], unique=False)

    op.create_table('monthly__summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('generated_power_sum', sa.Float(), nullable=True),
    sa.Column('consumed_power_sum', sa.Float(), nullable=True),
    sa.Column('excess_power_sum', sa.Float(), nullable=True),
    sa.Column('savings_sum', sa.Float(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('monthly__summary', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_monthly__summary_month'), ['month'], unique=False)
        batch_op.create_index(batch_op.f('ix_monthly__summary_year'), ['year'], unique=False)

    op.create_table('yearly__summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('generated_power_sum', sa.Float(), nullable=True),
    sa.Column('consumed_power_sum', sa.Float(), nullable=True),
    sa.Column('excess_power_sum', sa.Float(), nullable=True),
    sa.Column('savings_sum', sa.Float(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('yearly__summary', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_yearly__summary_year'), ['year'], unique=False)

    with op.batch_alter_table('device', schema=None) as batch_op:
        batch_op.add_column(sa.Column('serial', sa.String(length=120), nullable=True))
        batch_op.drop_index('ix_device_Device_Name')
        batch_op.create_index(batch_op.f('ix_device_serial'), ['serial'], unique=True)
        batch_op.drop_column('Device_Name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('device', schema=None) as batch_op:
        batch_op.add_column(sa.Column('Device_Name', mysql.VARCHAR(length=120), nullable=True))
        batch_op.drop_index(batch_op.f('ix_device_serial'))
        batch_op.create_index('ix_device_Device_Name', ['Device_Name'], unique=False)
        batch_op.drop_column('serial')

    with op.batch_alter_table('yearly__summary', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_yearly__summary_year'))

    op.drop_table('yearly__summary')
    with op.batch_alter_table('monthly__summary', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_monthly__summary_year'))
        batch_op.drop_index(batch_op.f('ix_monthly__summary_month'))

    op.drop_table('monthly__summary')
    with op.batch_alter_table('hourly__summary', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_hourly__summary_date'))

    op.drop_table('hourly__summary')
    with op.batch_alter_table('device__data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_device__data_timestamp'))

    op.drop_table('device__data')
    with op.batch_alter_table('daily__summary', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_daily__summary_date'))

    op.drop_table('daily__summary')
    # ### end Alembic commands ###
